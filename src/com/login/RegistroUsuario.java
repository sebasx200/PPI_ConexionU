/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license   
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.login;

import com.clases.Docente;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.util.CellReference;
import org.apache.poi.sl.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Daniel Henao
 */
public class RegistroUsuario extends javax.swing.JFrame {

    /**
     * Creates new form RegistrlDocente
     */
    public RegistroUsuario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroud = new javax.swing.JPanel();
        tituloTxt = new javax.swing.JLabel();
        inputOficina = new javax.swing.JTextField();
        inputApellido = new javax.swing.JTextField();
        inputDocumento = new javax.swing.JTextField();
        inputCorreo = new javax.swing.JTextField();
        inputNombre = new javax.swing.JTextField();
        inputUser = new javax.swing.JTextField();
        oficinaTxt = new javax.swing.JLabel();
        nombreTxt = new javax.swing.JLabel();
        userTxt = new javax.swing.JLabel();
        passTxt = new javax.swing.JLabel();
        passcheckTxt = new javax.swing.JLabel();
        apellidoTxt = new javax.swing.JLabel();
        departamentoTxt = new javax.swing.JLabel();
        uniTxt = new javax.swing.JLabel();
        documentoTxt = new javax.swing.JLabel();
        inputPass = new javax.swing.JPasswordField();
        inputPassCheck = new javax.swing.JPasswordField();
        ciudades = new javax.swing.JComboBox<>();
        checkOficina = new javax.swing.JCheckBox();
        correoTxt = new javax.swing.JLabel();
        universidades = new javax.swing.JComboBox<>();
        departamentos = new javax.swing.JComboBox<>();
        ciudadTxt = new javax.swing.JLabel();
        botonRegistro = new javax.swing.JButton();
        botonLogin = new javax.swing.JButton();
        loginTxt = new javax.swing.JLabel();
        tipoPerfil = new javax.swing.JComboBox<>();
        tipoPerfilTxt = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conexión U: Registro de docente");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1000, 630));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 630));

        backgroud.setBackground(new java.awt.Color(183, 214, 163));
        backgroud.setMinimumSize(new java.awt.Dimension(1000, 630));
        backgroud.setPreferredSize(new java.awt.Dimension(1000, 630));
        backgroud.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tituloTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        tituloTxt.setText("Registro de usuario");
        backgroud.add(tituloTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 190, 50));

        inputOficina.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        inputOficina.setEnabled(false);
        backgroud.add(inputOficina, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 170, 25));

        inputApellido.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        backgroud.add(inputApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 170, 25));

        inputDocumento.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        backgroud.add(inputDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 170, 25));

        inputCorreo.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        inputCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCorreoActionPerformed(evt);
            }
        });
        backgroud.add(inputCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 170, 25));

        inputNombre.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        backgroud.add(inputNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 170, 25));

        inputUser.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        backgroud.add(inputUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 170, 25));

        oficinaTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        oficinaTxt.setText("Oficina");
        backgroud.add(oficinaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, 90, 25));

        nombreTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        nombreTxt.setText("Nombre");
        backgroud.add(nombreTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 100, 25));

        userTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        userTxt.setText("Usuario");
        backgroud.add(userTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 100, 25));

        passTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        passTxt.setText("Contraseña");
        backgroud.add(passTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 100, 25));

        passcheckTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        passcheckTxt.setText("Confirmar Contraseña");
        passcheckTxt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        backgroud.add(passcheckTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 170, 25));

        apellidoTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        apellidoTxt.setText("Apellido");
        backgroud.add(apellidoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 100, 25));

        departamentoTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        departamentoTxt.setText("Departamento");
        backgroud.add(departamentoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 150, 25));

        uniTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        uniTxt.setText("Universidad");
        backgroud.add(uniTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, 150, -1));

        documentoTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        documentoTxt.setText("Documento");
        backgroud.add(documentoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 100, 25));

        inputPass.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        backgroud.add(inputPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 170, 25));

        inputPassCheck.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        backgroud.add(inputPassCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 170, 25));

        ciudades.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        ciudades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        ciudades.setEnabled(false);
        ciudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciudadesActionPerformed(evt);
            }
        });
        backgroud.add(ciudades, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 130, 170, 25));

        checkOficina.setBackground(new java.awt.Color(255, 255, 255));
        checkOficina.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        checkOficina.setText("¿Tiene oficina física?");
        checkOficina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkOficinaMouseClicked(evt);
            }
        });
        checkOficina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOficinaActionPerformed(evt);
            }
        });
        backgroud.add(checkOficina, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 410, 170, 25));

        correoTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        correoTxt.setText("Correo");
        backgroud.add(correoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 100, -1));

        universidades.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        universidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        universidades.setEnabled(false);
        universidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                universidadesActionPerformed(evt);
            }
        });
        backgroud.add(universidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, 170, 25));

        departamentos.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        departamentos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Antioquia", "Córdoba", "Bogota D.C.", "Caldas" }));
        departamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departamentosActionPerformed(evt);
            }
        });
        backgroud.add(departamentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 90, 170, 25));

        ciudadTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        ciudadTxt.setText("Ciudad");
        backgroud.add(ciudadTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 150, 25));

        botonRegistro.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        botonRegistro.setText("Registrase");
        botonRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonRegistroMouseClicked(evt);
            }
        });
        botonRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistroActionPerformed(evt);
            }
        });
        backgroud.add(botonRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 560, 120, 30));

        botonLogin.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        botonLogin.setText("Inicia sesión");
        backgroud.add(botonLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, 120, 30));

        loginTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        loginTxt.setText("Si ya tienes una cuenta");
        backgroud.add(loginTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 560, -1, 25));

        tipoPerfil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Docente", "Mentor", "Estudiante" }));
        backgroud.add(tipoPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 170, 25));

        tipoPerfilTxt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        tipoPerfilTxt.setText("Tipo de perfil");
        backgroud.add(tipoPerfilTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 150, -1));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/LOGO.png"))); // NOI18N
        backgroud.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 300, 300));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/background.png"))); // NOI18N
        backgroud.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 630));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void inputCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputCorreoActionPerformed

    private void checkOficinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOficinaActionPerformed


    }//GEN-LAST:event_checkOficinaActionPerformed

    private void checkOficinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOficinaMouseClicked

        if (checkOficina.isSelected()) {

            inputOficina.setEnabled(true);

        } else {
            inputOficina.setText("");
            inputOficina.setEnabled(false);
        }
    }//GEN-LAST:event_checkOficinaMouseClicked

    private void departamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departamentosActionPerformed

        if (departamentos.getSelectedItem().toString() != "Seleccionar") {

            ciudades.setEnabled(true);
            String[] ciudadesAnt = new String[]{"Medellín", "Sabaneta"};

            if (departamentos.getSelectedItem().toString() == "Antioquia") {

                //municipios.addItem("");
                for (int i = 0; i < ciudadesAnt.length; i++) {
                    ciudades.addItem(ciudadesAnt[i]);
                }

            }

        } else {
            ciudades.setEnabled(false);
        }


    }//GEN-LAST:event_departamentosActionPerformed

    private void ciudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciudadesActionPerformed


    }//GEN-LAST:event_ciudadesActionPerformed

    private void universidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_universidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_universidadesActionPerformed

    private void botonRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRegistroMouseClicked
        try{
        agregarDocente();
        } catch(Exception e){JOptionPane.showMessageDialog(null, "Por favor solo ingresar solo números en el documento");}
    }//GEN-LAST:event_botonRegistroMouseClicked

    private void botonRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonRegistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroUsuario().setVisible(true);
            }
        });
    }

    public boolean validarDatos() {
        
        boolean datosValidados = true;
        
        char [] pass1 = inputPass.getPassword();
        char [] pass2 = inputPassCheck.getPassword();
        
        String strPass1 = new String(pass1);
        String strPass2 = new String(pass2);
        
        if (!strPass1.equals(strPass2)) {
            
            datosValidados = false;
            JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden");
        }
            
        Arrays.fill(pass1, ' ');
        Arrays.fill(pass2, ' ');
        
        strPass1 = null;
        strPass2 = null;
        

        if (inputNombre.getText().isEmpty()
                || inputApellido.getText().isEmpty()
                || inputDocumento.getText().isEmpty()
                || inputUser.getText().isEmpty()
                || inputPass.getPassword().length == 0
                || inputPassCheck.getPassword().length == 0
                || inputCorreo.getText().isEmpty()
                || (checkOficina.isSelected() && inputOficina.getText().isEmpty())) {

            datosValidados = false;
            JOptionPane.showMessageDialog(this, "Favor llenar todos los campos ");
        }
        

        return datosValidados;

    }
    
    public void agregarDocente(){
        
        boolean datosOk = validarDatos();
        boolean tieneOficina = false;
        ArrayList<Docente> nuevoRegistro = new ArrayList<>();
        
 
        if(datosOk == true){
            
            String nombre = (inputNombre.getText());
            String apellido = (inputApellido.getText());
            int documento = (Integer.parseInt(inputDocumento.getText()));
            String usuario = (inputUser.getText());
            String correo = (inputCorreo.getText());  
            String oficina;
            
            char [] pass1 = inputPass.getPassword();
            String strPass1 = new String(pass1);
            
            if(checkOficina.isSelected()){
                
                tieneOficina = true;
                oficina = (inputOficina.getText());
            } else{oficina = "No tiene";}
            
            Docente docente = new Docente(nombre, apellido, documento, usuario, strPass1, correo, tieneOficina, oficina);
            
            nuevoRegistro.add(docente);
            
            try {
                
                FileInputStream archivoExcel = new FileInputStream("src/datos/registros.xlsx");
            
            
                XSSFWorkbook libroExcel = new XSSFWorkbook(archivoExcel);
                XSSFSheet hoja = libroExcel.getSheetAt(0);
                
                int ultimaFila = hoja.getLastRowNum();    
                
                for (Docente d : nuevoRegistro) {
                    Row nuevaFila = hoja.createRow(ultimaFila + 1);
                    nuevaFila.createCell(0).setCellValue(d.getNombre());
                    nuevaFila.createCell(1).setCellValue(d.getApellido());
                    nuevaFila.createCell(2).setCellValue(d.getDocumento());
                    nuevaFila.createCell(3).setCellValue(d.getUsuario());
                    nuevaFila.createCell(4).setCellValue(d.getPassword());
                    nuevaFila.createCell(5).setCellValue(d.getCorreo());
                    nuevaFila.createCell(6).setCellValue(d.getOficina());
                    
                    ultimaFila++;
                }
                boolean existeRegistro = existeRegistro(nuevoRegistro);
                if(existeRegistro == false){
                    
                    try (FileOutputStream archivoSalida = new FileOutputStream("src/datos/registros.xlsx")) {
                    libroExcel.write(archivoSalida);
                    JOptionPane.showMessageDialog(null, "Datos agregados correctamente");
                    }
                } else{JOptionPane.showMessageDialog(null, "El usuario o documento ingresado ya está registrado");}
            }catch (IOException e){
            System.out.println(e.getMessage());}
        }    
    }
    
    public boolean existeRegistro(ArrayList<Docente>nuevoRegistro){
        
        ArrayList<Docente>registrosActuales = new ArrayList<>();
        
        boolean exisiteRegistro = false;
        
        try {
            FileInputStream archivoExcel = new FileInputStream("src/datos/registros.xlsx");
            
            
                XSSFWorkbook libroExcel = new XSSFWorkbook(archivoExcel);
                XSSFSheet hoja = libroExcel.getSheetAt(0);
                
                DataFormatter dataFormatter = new DataFormatter();

                
                int primeraFila = hoja.getFirstRowNum()+1;
                int ultimaFila = hoja.getLastRowNum();
                
                for (int i = primeraFila; i <= ultimaFila; i++) {
                Row fila = hoja.getRow(i);
                
                if (fila != null || fila.equals("")) {
                    
                    for(int j=0; j < fila.getLastCellNum();j++){
        
                        String nombre = dataFormatter.formatCellValue(fila.getCell(0));
                        String apellido = dataFormatter.formatCellValue(fila.getCell(1));
                        int documento = Integer.parseInt(dataFormatter.formatCellValue(fila.getCell(2)));
                        String usuario = dataFormatter.formatCellValue(fila.getCell(3));
                        String password = dataFormatter.formatCellValue(fila.getCell(4));
                        String correo = dataFormatter.formatCellValue(fila.getCell(5));
                        String oficina = dataFormatter.formatCellValue(fila.getCell(6));

                        Docente docente = new Docente(nombre, apellido, documento, usuario, password, correo, true, oficina);
                        registrosActuales.add(docente);   
                    }
                }
            }
                
            for(Docente n : nuevoRegistro){
                for(Docente a : registrosActuales){
                    if(n.getDocumento() == a.getDocumento()){
                        exisiteRegistro = true;      
                    } else if(n.getUsuario().equals(n.getUsuario())){
                        exisiteRegistro = true;
                    }
                }       
            }
            
        } catch (IOException e){
            System.out.println(e.getMessage());
        }
        
        return exisiteRegistro;
    }  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellidoTxt;
    private javax.swing.JPanel backgroud;
    private javax.swing.JButton botonLogin;
    private javax.swing.JButton botonRegistro;
    private javax.swing.JCheckBox checkOficina;
    private javax.swing.JLabel ciudadTxt;
    private javax.swing.JComboBox<String> ciudades;
    private javax.swing.JLabel correoTxt;
    private javax.swing.JLabel departamentoTxt;
    private javax.swing.JComboBox<String> departamentos;
    private javax.swing.JLabel documentoTxt;
    private javax.swing.JLabel fondo;
    private javax.swing.JTextField inputApellido;
    private javax.swing.JTextField inputCorreo;
    private javax.swing.JTextField inputDocumento;
    private javax.swing.JTextField inputNombre;
    private javax.swing.JTextField inputOficina;
    private javax.swing.JPasswordField inputPass;
    private javax.swing.JPasswordField inputPassCheck;
    private javax.swing.JTextField inputUser;
    private javax.swing.JLabel loginTxt;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel nombreTxt;
    private javax.swing.JLabel oficinaTxt;
    private javax.swing.JLabel passTxt;
    private javax.swing.JLabel passcheckTxt;
    private javax.swing.JComboBox<String> tipoPerfil;
    private javax.swing.JLabel tipoPerfilTxt;
    private javax.swing.JLabel tituloTxt;
    private javax.swing.JLabel uniTxt;
    private javax.swing.JComboBox<String> universidades;
    private javax.swing.JLabel userTxt;
    // End of variables declaration//GEN-END:variables
}